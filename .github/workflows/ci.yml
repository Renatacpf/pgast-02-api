name: CI - PGATS-02-API
permissions:
  checks: write
  pull-requests: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependências
        run: npm install

      # Configurar variáveis de ambiente necessárias
      - name: Configurar variáveis de ambiente
        run: |
          echo "JWT_SECRET=supersecret" >> $GITHUB_ENV
          # adicione aqui outras variáveis, como DB_HOST, DB_USER, etc

      # Testes de Controller
      - name: Rodar testes do Controller
        run: npm run test-controller -- --reporter mocha-junit-reporter --reporter-options mochaFile=results-controller.xml

      - name: Publicar relatório Controller
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Controller Tests
          path: results-controller.xml
          reporter: java-junit

      # Subir a API em background
      - name: Subir API
        run: npm start &
      
      # Esperar API estar disponível
      - name: Aguardar API na porta 3000
        run: |
          for i in {1..20}; do
            if nc -z localhost 3000; then
              echo "✅ API está pronta!"
              break
            fi
            echo "⏳ Aguardando API..."
            sleep 2
          done

      # Testes de Integração
      - name: Rodar testes de Integração
        run: npm run test-integration -- --reporter mocha-junit-reporter --reporter-options mochaFile=results-integration.xml

      - name: Publicar relatório Integração
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Integration Tests
          path: results-integration.xml
          reporter: java-junit

      # Testes externos GraphQL
      - name: Rodar testes externos GraphQL
        run: npx mocha test/external/graphqlTransfer.test.js --timeout 10000 --reporter mocha-junit-reporter --reporter-options mochaFile=results-graphql.xml

      - name: Publicar relatório GraphQL
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: GraphQL Tests
          path: results-graphql.xml
          reporter: java-junit
